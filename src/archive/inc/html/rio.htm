<h3>Shortcuts</h3>

<table border='1'>
  <tr><th><code>ctrl+f</code></th><td>Auto-complete filename</td></tr>
  <tr><th><code>ctrl+a</code></th><td>Go to beginning of line</td></tr>
  <tr><th><code>ctrl+e</code></th><td>Go to end of line</td></tr>
  <tr><th><code>ctrl+"</code></th><td>Repeat last command</td></tr>
</table>

<h3>Useful Commands</h3>

<p>If you press <code>esc</code>, Rio will be in hold mode, in this mode commands will only be sent when leaving hold mode, allowing to send multiple lines at once.</p>

<table border='1'>
  <tr><th><code>fshalt</code></th><td>Always stop file system before power down.</td></tr>
  <tr><th><code>fshalt -r</code></th><td>Stop file system and reboot.</td></tr>
  <tr><th><code>usbfat:</code></th><td>Mount USB stick.</td></tr>
  <tr><th><code>usbeject</code></th><td>Unmount USB stick.</td></tr>
</table>

<h3>Screencapture</h3>

<p>Sometimes it can be useful to record what's on your screen. For example, you can use screen shots for documentation. Also, providing a view of an error can help others to diagnose the problem. You can take a shot of the whole screen quite easily in a raw image format like this.</p>

<table border='1'>
  <tr><th><code>cat /dev/screen | topng &gt; screen.png</code></th><td>To capture the entire screen</td></tr>
  <tr><th><code>cat /dev/window | topng &gt; window.png</code></th><td>To capture only the current window</td></tr>
</table>

<h2>Mods</h2>

<p>Whenever you make changes to the rio source files, you can recompile it with the following code, note that if you are using an Intel386 device, you will get 8.out.</p>

<pre>
mk # Will create a 5.out file
5.out # To launch rio, test changes
mv 5.out /bin/rio # Manually install changes
mk install & mk clean # Automatically install changes
</pre>

<h3>Wallpaper Support</h3>

<p>To add wallpaper support to Rio, you want to edit the rio file <code>/sys/src/cmd/rio/data.c</code>, within the <code>iconinit</code> function, you can draw a graphic to the background image by adding the following code. In this example, the graphic is stored at the location defined with <code>open()</code>, feel free to change it.</p>

<pre>
int fd;
Image *bimg = nil;
fd = open("/usr/glenda/lib/wallpaper", OREAD);
if(fd >= 0){
	bimg = readimage(display, fd, 0);
	close(fd);
}
if(bimg){
	background = allocimage(display, Rect(0, 0, Dx(bimg->r), Dy(bimg->r)), RGB24, 1, 0x000000FF);
	draw(background, background->r, bimg, 0, bimg->r.min);
}
else
	fprint(2, "iconinit: %r\n");
</pre>

<p>The file format should be in Plan 9's native raw file format, to convert any jpg into this format, use: </p>

<pre>jpg -9t wallpaper.jpg > wallpaper</pre>

<h3>Rio Theme</h3>

<p>My current theme for rio can be installed by modifying the <code>/sys/src/cmd/rio/wind.c</code> file and adding the following lines in the <code>wmk</code> function:</p>

<pre>
if(cols[0] == nil){
	grey = allocimage(display, Rect(0,0,1,1), CMAP8, 1, 0x555555FF);
	darkgrey = allocimage(display, Rect(0,0,1,1), CMAP8, 1, 0x333333FF);
	cols[BACK] = display->white;
	cols[HIGH] = allocimage(display, Rect(0,0,1,1), screen->chan, 1, 0x72DEC2FF);
	/* halftone */
	cols[BORD] = allocimage(display, Rect(0,0,2,2), CMAP8, 1, 0x000000FF);
	draw(cols[BORD], Rect(1,1,2,2), display->white, nil, ZP);
	draw(cols[BORD], Rect(0,0,1,1), display->white, nil, ZP);
	cols[TEXT] = display->black;
	cols[HTEXT] = display->white;
	titlecol = allocimage(display, Rect(0,0,1,1), CMAP8, 1, 0x000000FF);
	lighttitlecol = allocimage(display, Rect(0,0,1,1), CMAP8, 1, 0x000000FF);
	holdcol = allocimage(display, Rect(0,0,1,1), screen->chan, 1, 0x72DEC2FF);
	lightholdcol = allocimage(display, Rect(0,0,1,1), CMAP8, 1, 0xCCCCCCFF);
	paleholdcol = allocimage(display, Rect(0,0,1,1), CMAP8, 1, 0x888888FF);
}
</pre>

<p>I don't like that the scrollbar touches the side of the window, to fix that, you can modify the <code>wscrdraw</code> function in the <code>/sys/src/cmd/rio/scrl.c</code> file, and change the following lines:</p>

<pre>
if(!eqrect(r2, w->lastsr)){
	w->lastsr = r2;
	/* move r1, r2 to (0,0) to avoid clipping */
	r2 = rectsubpt(r2, r1.min);
	r1 = rectsubpt(r1, r1.min);
	draw(b, r1, w->cols[BORD], nil, ZP);
	r2.max.x = r2.max.x+1;
	draw(b, r2, w->cols[TEXT], nil, ZP);
	r2.min.x = r2.max.x-1;
	draw(b, r2, w->cols[BORD], nil, ZP);
	draw(w->i, r, b, nil, Pt(0, r1.min.y));
}
</pre>

<h3>Open window with position</h3>

<pre>echo new -dx 400 -dy 200 -cd /sys/src/cmd acme > /dev/wctl</pre>

<img src='../media/refs/mothra.png' alt='mothra' width='16'/>