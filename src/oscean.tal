( The Bequest Globe )

|a0 @File &vector $2 &success $2 &stat $2 &delete $1 &append $1 &name $2 &length $2 &read $2 &write $2
|b0 @File2 &vector $2 &success $2 &stat $2 &delete $1 &append $1 &name $2 &length $2 &read $2 &write $2

|0000

	@term &name $16 &parent $16 &pict $4 &diary $60

|0100

@on-reset ( -> )
	( initialize ) ;dict/lexicon-path .File/name DEO2
	#2000 .File/length DEO2
	;lexicon DUP2 .File/read DEO2
	#0a00 cswp
	( build ) ;lexicon
	&while ( -- )
		( move to name ) INC2 INC2
		( init ) init-page
		( build ) build-page
		( goto eol )
	&eol ( -- )
		INC2 LDAk ?&eol
	INC2 LDAk ?&while
	POP2
	( Halt. ) #800f DEO
	BRK

(
@|build )

@init-page ( name* -- name* )
	( prepare output ) DUP2 ;&buf scpy
	( ) ;&buf [ LIT2 20 "_ ] cswp
	( ) ;dict/html-ext ;&buf scat
	( ) ;&site-path .File2/name DEO2
	#0001 .File2/length DEO2
	( cleanup )
	( clear zeropage ) #0000 #0100 mclr DUP2 load-diary DUP2 load-incoming
	( verify orphans ) .File/success DEI2 ORA ?&>no-orphan
		DUP2 ;err/orphan <print-warning> &>no-orphan
	( | fill name )
	DUP2 ;term/name scpy DUP2 find-parent ;term/parent scpy
	( fill diary ) DUP2 find-diary ORAk #00 EQU ?&continue
	DUP2 ;term/diary scpy
	( copy pict ) DUP2 #0006 ADD2
	( clip bound ) INC2k INC2 INC2 STH2
	( clip start ) #00 STH2kr STA
	( clip wrap ) ;term/pict scpy
	( clip restore ) #09 STH2r STA
	&continue ( -- )
		POP2 JMP2r
		&site-path [ "site/ &buf $30 ]

@load-diary ( name* -- )
	( make path ) ;&file scpy ;&file [ LIT2 20 "_ ] cswp
	( load ) ;&log-path .File/name DEO2
	#1000 .File/length DEO2
	;diary
	( clear ) DUP2 [ LIT2 &length $2 ] mclr
	( read ) DUP2 .File/read DEO2
	( lines ) #0a00 cswp .File/success DEI2 ,&length STR2
	JMP2r
	&log-path [ "tmp/log- &file $30 ]

@load-incoming ( name* -- )
	( paste ) ;&buf STH2k scpy
	( cswp ) STH2r [ LIT2 20 "_ ] cswp
	( load ) ;&map-path .File/name DEO2
	#1000 .File/length DEO2
	;incoming
	( clear ) DUP2 [ LIT2 &length $2 ] mclr
	( read ) DUP2 .File/read DEO2
	( split lines ) #0a00 cswp .File/success DEI2 ,&length STR2
	JMP2r
	&map-path [ "tmp/map- &buf $30 ]

@build-page ( name* -- name* )
	( | render )
	;dict/doctype <str>
	;dict/html-tag <write-open>
	( | head )
	;dict/head-tag <write-open>
	;dict/meta-head-path <write-inc>
	;dict/title-tag <write-open>
	;dict/title-txt <str>
	#20 <char>
	;dict/mdash-entity-txt <str>
	#20 <char>
	DUP2 <str>
	;dict/title-tag <write-close>
	;dict/head-tag <write-close>
	( | body )
	;dict/body-tag <write-open>
	;dict/meta-header-path <write-inc>
	build-page-nav build-page-main ;dict/meta-footer-path <write-inc>
	;dict/body-tag <write-close>
	;dict/html-tag !<write-close>

@build-page-nav ( name* -- name* )
	;dict/nav-tag <write-open>
	DUP2 #0002 SUB2 LDA chex #00 EQU ?&>no-siblings
	DUP2 #0002 SUB2 LDA chex #02 LTH ?&>no-parents
		DUP2 find-parent find-parent build-children POP2 &>no-parents
	DUP2 #0002 SUB2 LDA chex #00 EQU ?&>no-siblings
		DUP2 find-parent build-children POP2 &>no-siblings
	build-children ;dict/nav-tag !<write-close>

@build-children ( name* -- name* )
	;dict/ul-tag <write-open>
	( stash depth ) DUP2k #0002 SUB2 LDA chex STH
	( start after ) scap INC2
	&while ( -- )
		( stop at sibling ) LDAk chex STHkr EQU ?&end
		( when depth+1 ) LDAk chex STHkr INC NEQ ?&continue
		;dict/li-tag <write-open>
		INC2k INC2 <write-link>
		;dict/li-tag <write-close>
	&continue ( -- )
		INC2 INC2
	&eol ( -- )
		INC2 LDAk ?&eol
	INC2 LDAk ?&while
	&end ( -- )
		POP2 POPr ;dict/ul-tag !<write-close>

@build-page-main ( name* -- name* )
	;dict/main-tag <write-open>
	( | picture )
	;term/pict LDA #00 EQU ?&>no-picture
		;term/diary build-module-photo &>no-picture
	( body ) build-page-body
	( module ) build-page-module
	( events ) build-page-events
	( incoming ) build-page-incoming
	( close ) ;dict/main-tag !<write-close>

@build-page-body ( name* -+ name* )
	DUP2 ;&buf scpy
	( ) ;&buf [ LIT2 20 "_ ] cswp
	( ) ;dict/htm-ext ;&buf scat
	( ) ;&htm-path !<write-inc>
	&htm-path [ "src/htm/ &buf $30 ]

@build-page-module ( term* -- term* )
	DUP2 #0001 SUB2 LDA [ LIT ", ] EQU ?build-module-album
	DUP2 #0001 SUB2 LDA [ LIT "; ] EQU ?build-module-portal
	DUP2 #0001 SUB2 LDA [ LIT ": ] EQU ?build-module-archive
	JMP2r

@build-page-events ( name* -- name* )
	STH2 ;dict/ul-tag <write-open>
	;diary
	&while ( -- )
		DUP2 #0005 ADD2 LDA [ LIT "+ ] NEQ ?&eol
		;dict/li-tag <write-open>
		DUP2 build-module-event ;dict/li-tag <write-close>
	&eol ( -- )
		INC2 LDAk ?&eol
	INC2 LDAk ?&while
	POP2 ;dict/ul-tag <write-close>
	STH2r JMP2r

@build-module-album ( name* -- name* )
	STH2 ;diary
	&while ( -- )
		( is blank ) DUP2 ;dict/no-picture log-has-picture ?&eol
		( is head ) DUP2 ;term/pict log-has-picture ?&eol
		DUP2 build-module-photo
	&eol ( -- )
		INC2 LDAk ?&eol
	INC2 LDAk ?&while
	POP2 STH2r JMP2r

@build-module-portal ( -- )
	( name* -- name* )
	( stash depth ) DUP2k #0002 SUB2 LDA chex STH
	( start after ) scap INC2
	&while ( -- )
		( stop at sibling ) LDAk chex STHkr EQU ?&end
		( when depth+1 ) LDAk chex STHkr INC NEQ ?&continue
		INC2k INC2 DUP2 load-diary find-diary ORAk #00 EQU ?&>no-diary
			DUP2 build-module-photo &>no-diary
		POP2
	&continue ( -- )
		INC2 INC2
	&eol ( -- )
		INC2 LDAk ?&eol
	INC2 LDAk ?&while
	&end ( -- )
		POP2 POPr
		( restore diary ) DUP2 !load-diary

@build-module-archive ( name* -- name* )
	( stash depth ) DUP2k #0002 SUB2 LDA chex STH
	( start after ) scap INC2
	&while ( -- )
		( stop at sibling ) LDAk chex STHkr EQU ?&end
		( when depth+1 ) LDAk chex STHkr INC NEQ ?&>continue
			INC2 INC2 build-page-body &>continue
		INC2 INC2
	&eol ( -- )
		INC2 LDAk ?&eol
	INC2 LDAk ?&while
	&end ( -- )
		POP2 POPr JMP2r

@build-module-event ( diary* -- )
	( event date )
	( clip bound ) DUP2 #0005 ADD2 STH2
	( clip start ) #00 STH2kr STA
	( clip wrap ) ;dict/code-tag <write-auto>
	( clip restore ) [ LIT "+ ] STH2r STA
	( event spacer ) #20 <char>
	;dict/mdash-entity-txt <str>
	#20 <char>
	( event name ) DUP2 #09 next-char INC2 #09 next-char INC2 !<str>

@build-module-photo ( diary* -- )
	LDAk ?&continue
	POP2 JMP2r
	&continue ( diary* ~- )
		( html ) ;dict/figure-tag <write-open>
		( clip ) DUP2 #0009 ADD2 STH2 #00 STH2r STA
		( cpy path )
		( cat id ) DUP2 #0006 ADD2 ;&buf scpy
		( cat ext ) ;dict/jpg-ext ;&buf scat
		( | )
		;&diary-path
		( make alt* ) OVR2 #00 next-char INC2 #09 next-char INC2 <write-img>
		( unclip ) DUP2 #0009 ADD2 STH2 #09 STH2r STA
		;dict/figcaption-tag <write-open>
		DUP2 #000a ADD2 ;term/name SWP2 sseg ?&skip
		DUP2 extract-term <write-link>
		#20 <char>
		;dict/mdash-entity-txt <str>
		#20 <char>
	&skip ( -- )
		#09 next-char INC2 #09 next-char INC2 <str>
		;dict/figcaption-tag <write-close>
		;dict/figure-tag !<write-close>
	&diary-path [ "../media/diary/ &buf $20 ]

(
@|helpers )

@extract-term ( diary* -- term* )
	#00 ;&buff STA
	#000a ADD2
	( clip bound ) DUP2 #09 next-char STH2
	( clip start ) #00 STH2kr STA
	( clip wrap ) ;&buff scat
	( clip restore ) #09 STH2r STA
	;&buff JMP2r
	&buff $16

@build-page-incoming ( -- )
	;incoming LDAk ?&>exists
		POP2 JMP2r &>exists
	;dict/p-tag <write-open>
	;dict/incoming-txt <str>
	&while ( -- )
		DUP2 <write-link>
		#20 <char>
	&eol ( -- )
		INC2 LDAk ?&eol
	INC2 LDAk ?&while
	POP2 ;dict/p-tag !<write-close>

(
@|tools )

@find-diary ( name* -- diary* )
	STH2 ;diary
	&while ( -- )
		( skip events ) DUP2 ;dict/no-picture log-has-picture ?&eol
		POP2r JMP2r
		&eol INC2 LDAk ?&eol
	INC2 LDAk ?&while
	POP2 #0000 POP2r JMP2r

@find-parent ( term* -- parent* )
	DUP2 #0002 SUB2 LDA chex ?&>not-root
		JMP2r &>not-root
	#00 prev-char INC2
	( stash depth ) LDAk chex #01 SUB STH
	( let's go ) ;lexicon SWP2
	&loop ( -- )
		#0001 SUB2 #00 prev-char INC2k LDA chex STHkr NEQ ?&>continue
			NIP2 POPr INC2 INC2 INC2 JMP2r &>continue
		LTH2k ?&loop
	POPr #0002 JMP2r

@log-has-picture ( log* picture* -- flag )
	SWP2 #0006 ADD2 !sseg

(
@|framework )

@<write-inc> ( path* -- )
	DUP2 .File/name DEO2
	#8000 .File/length DEO2
	LITr 00 ;workarea
	&s ( -- )
		DUP2 .File/read DEO2
		.File/success DEI2 DUP2 .File2/length DEO2
		#0000 EQU2 ?&end
		DUP2 .File2/write DEO2
		INCr !&s
	&end ( -- )
		POP2 STHr ?&>no-missing
			DUP2 ;err/source <print-error> &>no-missing
		POP2 #0001 .File2/length DEO2
		JMP2r

@<write-img> ( src* alt* -- )
	[ LIT "< ] <char>
	;dict/img-tag <str>
	;dict/alt-attr <write-attr>
	;dict/src-attr <write-attr>
	[ LIT "/ ] <char>
	[ LIT "> ] !<char>

@<write-link> ( name* -- )
	[ LIT "< ] <char>
	[ LIT "a ] <char>
	( ) DUP2 ;&link-path scpy
	( ) ;&link-path [ LIT2 20 "_ ] cswp
	( ) ;dict/html-ext ;&link-path scat
	( ) ;&link-path ;dict/href-attr <write-attr>
	DUP2 ;term/name scmp #00 EQU ?&>not-self
		;dict/self-txt ;dict/class-attr <write-attr> &>not-self
	DUP2 ;term/parent scmp #00 EQU ?&>not-parent
		;dict/parent-txt ;dict/class-attr <write-attr> &>not-parent
	[ LIT "> ] <char>
	<str>
	;dict/a-tag !<write-close>
	&link-path $30

@<write-attr> ( body* attr* -- )
	#20 <char>
	<str>
	[ LIT "= ] <char>
	[ LIT "" ] <char>
	<str>
	[ LIT "" ] !<char>

@<write-open> ( tag* -- )
	LIT "< <char>
	<str>
	LIT "> !<char>

@<write-auto> ( str* tag* -+ )
	DUP2 <write-open>
	SWP2 <str>

@<write-close> ( tag* -- )
	LIT "< <char>
	LIT "/ <char>
	<str>
	LIT "> !<char>

@<str> ( addr* -- )
	DUP2 scap OVR2 SUB2 .File2/length DEO2
	.File2/write DEO2
	JMP2r

@<char> ( char -- )
	#0001 .File2/length DEO2
	;&b STAk
	.File2/write DEO2
	POP JMP2r
	&b $1

@prev-char ( addr* char -- addr* )
	,&t STR
	&while ( -- )
		LDAk [ LIT &t $1 ] EQU ?&end
		#0001 SUB2 LDAk ?&while
	&end ( -- )
		JMP2r

@next-char ( addr* char -- addr* )
	,&t STR
	&while ( -- )
		LDAk [ LIT &t $1 ] EQU ?&end
		INC2 LDAk ?&while
	&end ( -- )
		JMP2r

(
@|stdlib )

@chex ( c -- <val> )
	( dec ) LIT "0 SUB DUP #09 GTH [ JMP JMP2r ]
	( hex ) #27 SUB DUP #0f GTH [ JMP JMP2r ]
	( err ) POP #ff JMP2r

@cswp ( str* a b -- )
	,&b STR
	,&a STR
	&while ( -- )
		LDAk [ LIT &a $1 ] NEQ ?&continue
		STH2k [ LIT &b $1 ] STH2r STA
	&continue ( -- )
		INC2 LDAk ?&while
	POP2 JMP2r

@scap ( str* -- end* )
	!&a
	&w ( -- )
		INC2 &a LDAk ?&w
	JMP2r

@scat ( src* dst* -+ )
	scap

@scpy ( src* dst* -- )
	STH2
	&w ( -- )
		LDAk #00 STH2kr STA2
		INC2r INC2 LDAk ?&w
	POP2 POP2r JMP2r

@scmp ( a* b* -- f )
	STH2
	&l ( -- )
		LDAk LDAkr STHr ANDk #00 EQU ?&e
		NEQk ?&e
		POP2 INC2 INC2r !&l
	&e ( -- )
		NIP2 POP2r EQU JMP2r

@sseg ( a* b* -- f )
	STH2
	&l ( -- )
		LDAk LDAkr STHr NEQ ?&e
		INC2k LDA #00 EQU ?&e
		INC2 INC2r !&l
	&e ( -- )
		LDA LDAr STHr EQU JMP2r

@mclr ( src* len* -- )
	OVR2 ADD2 SWP2
	&l ( -- )
		LITr 00 STH2k STAr
		INC2 GTH2k ?&l
	POP2 POP2 JMP2r

@phex ( hex* -- )
	SWP phex/b
	&b ( b -- )
		DUP #04 SFT phex/c
	&c ( c -- )
		#0f AND DUP #09 GTH #27 MUL ADD #30 ADD #18 DEO
		JMP2r

@<pstr> ( str* -- )
	!&a
	&w ( -- )
		LDAk #18 DEO
		INC2 &a LDAk ?&w
	POP2 JMP2r

@<print-warning> ( name* msg* -- )
	( msg ) <pstr>
	( name ) <pstr>
	#0a18 DEO
	JMP2r

@<print-error> ( name* msg* -> )
	( msg ) <pstr>
	( name ) <pstr>
	#0a18 DEO
	#010f DEO
	BRK

(
@|dict )

@dict &meta-head-path "src/htm/meta_head.htm $1
	&meta-header-path "src/htm/meta_header.htm $1
	&meta-footer-path "src/htm/meta_footer.htm $1
	&lexicon-path "src/tables/lexicon $1
	&self-txt "self $1
	&mdash-entity-txt "&mdash; $1
	&parent-txt "parent $1
	&title-txt "XXIIVV $1
	&class-attr "class $1
	&href-attr "href $1
	&html-ext ".html $1
	&htm-ext ".htm $1
	&jpg-ext ".jpg $1
	&doctype "<!DOCTYPE 20 "html> $1
	&html-tag "html $1
	&head-tag "head $1
	&title-tag "title $1
	&body-tag "body $1
	&nav-tag "nav $1
	&main-tag "main $1
	&p-tag "p $1
	&ul-tag "ul $1
	&li-tag "li $1
	&a-tag "a $1
	&img-tag "img $1
	&code-tag "code $1
	&figure-tag "figure $1
	&figcaption-tag "figcaption $1
	&src-attr "src $1
	&alt-attr "alt $1
	&no-picture "000 $1
	&incoming-txt "<b>Incoming</b>: 20 $1

@err &source "-- 20 "Source: 20 $1
	&orphan "-- 20 "Orphan: 20 $1

(
@|memory )

@lexicon $2000

@diary $1000

@incoming $1000

@workarea


