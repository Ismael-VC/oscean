( The Bequest Globe )

|a0 @File &vector $2 &success $2 &stat $2 &delete $1 &append $1 &name $2 &length $2 &read $2 &write $2

|0000

	@term &name $16 &parent $16 &pict $4 &diary $60
	@buff $30

|0100 ( -> )

	( initialize )
	;lexicon-path .File/name DEO2
	#2000 .File/length DEO2
	;lexicon
		DUP2 .File/read DEO2
		#0a00 ;cswp JSR2
	( build )
	,focus-page LDR ;build-one JCN2
		;build-all JSR2
	( Halt. )
	#010f DEO

BRK

@focus-page $1

@build-one ( -> )

	;focus-page ;find-term JSR2 ;build-page JSR2
	#010f DEO

BRK

@build-all ( -- )

	;lexicon
	&while
		( move to name ) INC2 INC2
		( init ) ;init-page JSR2
		( build ) ;build-page JSR2
		( goto eol ) &eol INC2 LDAk ,&eol JCN INC2
		LDAk ,&while JCN
	POP2

JMP2r

( build )

@init-page ( name* -- name* )

	( term name limit )
	DUP2 ;slen JSR2 #0016 LTH2 ,&namelength-ok JCN
		;error-term-name-size ;print-error JMP2
		&namelength-ok

	( cleanup )
	( clear zeropage ) #0000 #00ff ;mclr JSR2
	( clean output ) #8000 #7fff ;mclr JSR2
	( reset head ) #8000 ;write/head STA2

	DUP2 ;load-diary JSR2
	DUP2 ;load-incoming JSR2

	( fill name )
	DUP2 ;term/name ;scpy JSR2
	DUP2 ;find-parent JSR2 ;term/parent ;scpy JSR2

	( fill diary )
	DUP2 ;find-diary JSR2
	ORAk #00 EQU ,&continue JCN
		DUP2 ;term/diary #0050 ;mcpy JSR2
		( copy pict )
		DUP2 #0006 ADD2
		( clip bound ) INC2k INC2 INC2 STH2
		( clip start ) #00 STH2kr STA
		( clip wrap ) ;term/pict ;scpy JSR2
		( clip restore ) #09 STH2r STA
		&continue
	POP2

JMP2r

@load-diary ( name* -- )

	( make path )
	;diary #1000 ;mclr JSR2
	;buff STH2k #0030 ;mclr JSR2
	;tmp-path STH2kr ;scpy JSR2
	STH2kr ;scat JSR2
	;log-ext STH2kr ;scat JSR2
	STH2kr #20 [ LIT '_ ] ;cswp JSR2
	( load )
	STH2r .File/name DEO2
	#1000 .File/length DEO2
	;diary .File/read DEO2
	( split lines )
	;diary #0a00 ;cswp ( .. )

JMP2

@load-incoming ( name* -- )

	( make path )
	;incoming #1000 ;mclr JSR2
	;buff STH2k #0030 ;mclr JSR2
	;tmp-path STH2kr ;scpy JSR2
	STH2kr ;scat JSR2
	;map-ext STH2kr ;scat JSR2
	STH2kr #20 [ LIT '_ ] ;cswp JSR2
	( load )
	STH2r .File/name DEO2
	#1000 .File/length DEO2
	;incoming .File/read DEO2
	( split lines )
	;incoming #0a00 ;cswp ( .. )

JMP2

@build-page ( name* -- name* )

	( render )
	;doctype ;write JSR2
	;html-tag ;write-open JSR2
		( head )
		;head-tag ;write-open JSR2
			;meta-head-path ;include JSR2
			;title-tag ;write-open JSR2
				;title-txt ;write JSR2 [ LIT 20 ] ;write/char JSR2 ;mdash-entity-txt ;write JSR2 [ LIT 20 ] ;write/char JSR2 DUP2 ;write JSR2
			;title-tag ;write-close JSR2
		;head-tag ;write-close JSR2
		( body )
		;body-tag ;write-open JSR2
			;meta-header-path ;include JSR2
			;build-page-nav JSR2
			;build-page-main JSR2
			;meta-footer-path ;include JSR2
		;body-tag ;write-close JSR2
	;html-tag ;write-close JSR2

	( check file )
	;write/head LDA2 #8000 SUB2 #7fff LTH2 ,&size-ok JCN
		;error-output-size ;print-error JMP2
		&size-ok

	( save file )
	[ ;output-path OVR2 ;html-ext ;make-path JSR2 ] .File/name DEO2
	[ ;write/head LDA2 #8000 SUB2 ] .File/length DEO2
	#8000 .File/write DEO2

	JMP2r ( print )
	;write/head LDA2 #8000 SUB2 ;print JSR2
	#2018 DEO
	DUP2 ;print-str JSR2 #0a18 DEO

JMP2r

@build-page-nav ( name* -- name* )

	;nav-tag ;write-open JSR2
		DUP2 #0002 SUB2 LDA ;chex JSR2 #00 EQU ,&no-siblings JCN
		( parents )
		DUP2 #0002 SUB2 LDA ;chex JSR2 #02 LTH ,&no-parents JCN
			DUP2 ;find-parent JSR2 ;find-parent JSR2 ,&build-children JSR POP2
			&no-parents
		( siblings )
		DUP2 #0002 SUB2 LDA ;chex JSR2 #01 LTH ,&no-siblings JCN
			DUP2 ;find-parent JSR2 ,&build-children JSR POP2
			&no-siblings
		( children ) ,&build-children JSR
	;nav-tag ;write-close ( .. )

JMP2

	&build-children ( name* -- name* )

		;ul-tag ;write-open JSR2
		( stash depth ) DUP2k #0002 SUB2 LDA ;chex JSR2 STH
		( start after ) DUP2 ;slen JSR2 ADD2 INC2
		&while
			( stop at sibling ) LDAk ;chex JSR2 STHkr EQU ,&end JCN
			( when depth+1 ) LDAk ;chex JSR2 STHkr INC NEQ ,&continue JCN
				;li-tag ;write-open JSR2
				INC2k INC2 ;add-local JSR2
				;li-tag ;write-close JSR2
				&continue
			( move to eol ) INC2 INC2 &eol INC2 LDAk ,&eol JCN INC2
			LDAk ,&while JCN
		&end
		POP2 POPr
		;ul-tag ;write-close ( .. )

JMP2

@build-page-main ( name* -- name* )

	;main-tag ;write-open JSR2
		( picture )
		;term/pict LDA #00 EQU ,&no-picture JCN
			;term/diary ;build-module-photo JSR2
			&no-picture
		( body )
		;build-page-body JSR2
		;build-page-module JSR2
		;build-page-special JSR2
		;build-page-calendar JSR2
		;build-page-incoming JSR2
	;main-tag ;write-close ( .. )

JMP2

@build-page-body ( name* -- name* )

	( origin ) ;write/head LDA2 STH2
	[ ;htm-path OVR2 ;htm-ext ;make-path JSR2 ] ;include JSR2
	( validate ) STH2r ;validate-output ( .. )

JMP2

@build-page-module ( term* -- term* )

	DUP2 #0001 SUB2 LDA LIT ', NEQ ,&no-album JCN
		;build-module-album JMP2
		&no-album
	DUP2 #0001 SUB2 LDA LIT '; NEQ ,&no-portal JCN
		;build-module-portal JMP2
		&no-portal
	DUP2 #0001 SUB2 LDA LIT ': NEQ ,&no-archive JCN
		;build-module-archive JMP2
		&no-archive

JMP2r

@build-page-special ( term* -- term* )

	DUP2 ;index-txt ;scmp JSR2 #00 EQU ,&no-index JCN
		;build-special-index JMP2
		&no-index
	DUP2 ;journal-txt ;scmp JSR2 #00 EQU ,&no-journal JCN
		;build-special-journal JMP2
		&no-journal

JMP2r

@build-special-index ( -- )

	;ul-tag ;write-open JSR2
		;lexicon
		&while
			( move to name ) INC2 INC2
			;li-tag ;write-open JSR2
				DUP2 ;add-local JSR2
			;li-tag ;write-close JSR2
			( move to eol ) &eol INC2 LDAk ,&eol JCN INC2
			LDAk ;&while JCN2
		POP2
	;ul-tag ;write-close ( .. )

JMP2

@build-special-journal ( -- )

	( load latest diary page )
	;diary #1000 ;mclr JSR2
	;&latest-page .File/name DEO2
	#1000 .File/length DEO2
	;diary .File/read DEO2
	( split lines )
	;diary #0a00 ;cswp JSR2
	( limit at 20 )
	#00 ;&limit STA
	;diary
	&while
		;&limit LDA #20 GTH ,&end JCN
		DUP2 ;no-picture ;log-has-picture JSR2 ,&continue JCN
			DUP2 ;build-module-photo JSR2
			;&limit LDA INC ;&limit STA
		&continue
		( goto eol ) &eol INC2 LDAk ,&eol JCN INC2
		LDAk ,&while JCN
	&end
	POP2
	( clear diary )
	;diary #1000 ;mclr ( .. )

JMP2
	&limit $1
	&latest-page "src/tables/diary/15-19 $1

@build-page-calendar ( name* -- name* )

	STH2
	;ul-tag ;write-open JSR2
	;diary
	&while
		DUP2 #0005 ADD2 LDA [ LIT '+ ] NEQ ,&continue JCN
			;li-tag ;write-open JSR2
				DUP2 ;build-module-event JSR2
			;li-tag ;write-close JSR2
			&continue
		( goto eol ) &eol INC2 LDAk ,&eol JCN INC2
		LDAk ,&while JCN
	POP2
	;ul-tag ;write-close JSR2
	STH2r
	
JMP2r

@build-module-album ( name* -- name* )

	STH2
	;diary
	&while
		( picture is blank ) DUP2 ;no-picture ;log-has-picture JSR2 ,&continue JCN
		( picture is head ) DUP2 ;term/pict ;log-has-picture JSR2 ,&continue JCN
			DUP2 ;build-module-photo JSR2
		&continue
		( goto eol ) &eol INC2 LDAk ,&eol JCN INC2
		LDAk ,&while JCN
	POP2 STH2r

JMP2r

@build-module-portal ( name* -- name* )

	( stash depth ) DUP2k #0002 SUB2 LDA ;chex JSR2 STH
	( start after ) DUP2 ;slen JSR2 ADD2 INC2
	&while
		( stop at sibling ) LDAk ;chex JSR2 STHkr EQU ,&end JCN
		( when depth+1 ) LDAk ;chex JSR2 STHkr INC NEQ ,&continue JCN

			INC2k INC2 ;find-diary-external JSR2 ORAk #00 EQU ,&no-diary JCN
				DUP2 ;build-module-photo JSR2
				&no-diary
				POP2

			&continue
		( move to eol ) INC2 INC2 &eol INC2 LDAk ,&eol JCN INC2
		LDAk ,&while JCN
	&end
	POP2 POPr

JMP2r

@build-module-archive ( name* -- name* )

	( stash depth ) DUP2k #0002 SUB2 LDA ;chex JSR2 STH
	( start after ) DUP2 ;slen JSR2 ADD2 INC2
	&while
		( stop at sibling ) LDAk ;chex JSR2 STHkr EQU ,&end JCN
		( when depth+1 ) LDAk ;chex JSR2 STHkr INC NEQ ,&continue JCN
			INC2 INC2
				;build-page-body JSR2
			&continue
		( move to eol ) INC2 INC2 &eol INC2 LDAk ,&eol JCN INC2
		LDAk ,&while JCN
	&end
	POP2 POPr

JMP2r

@build-module-event ( diary* -- )

	( event date )
	( clip bound ) DUP2 #0005 ADD2 STH2
	( clip start ) #00 STH2kr STA
	( clip wrap ) ;code-tag ;write-auto JSR2
	( clip restore ) [ LIT '+ ] STH2r STA
	( event spacer ) [ LIT 20 ] ;write/char JSR2 ;mdash-entity-txt ;write JSR2 [ LIT 20 ] ;write/char JSR2
	( event name ) DUP2 #09 ;next-char JSR2 INC2 #09 ;next-char JSR2 INC2 ;write ( .. )

JMP2

@build-module-photo ( diary* -- )

	( html )
	;figure-tag ;write-open JSR2
		( clip ) DUP2 #0009 ADD2 STH2 #00 STH2r STA
		( make src* )
		;diary-path ;&diary-path ;scpy JSR2
		DUP2 #0006 ADD2 ;&diary-path ;scat JSR2
		;jpg-ext ;&diary-path ;scat JSR2
		;&diary-path
		( make alt* )
		OVR2 #00 ;next-char JSR2 INC2 #09 ;next-char JSR2 INC2
			;add-img-tag JSR2
		( unclip ) DUP2 #0009 ADD2 STH2 #09 STH2r STA
		;figcaption-tag ;write-open JSR2
			DUP2 #000a ADD2 ;term/name SWP2 ;sseg JSR2 ,&skip JCN
				DUP2 ;extract-term JSR2 ;add-local JSR2
				[ LIT 20 ] ;write/char JSR2 ;mdash-entity-txt ;write JSR2 [ LIT 20 ] ;write/char JSR2
				&skip
			#09 ;next-char JSR2 INC2 #09 ;next-char JSR2 INC2 ;write JSR2
		;figcaption-tag ;write-close JSR2
	;figure-tag ;write-close

JMP2
	&diary-path $20

@extract-term ( diary* -- term* )

	#00 ;&buff STA
	#000a ADD2
	( clip bound ) DUP2 #09 ;next-char JSR2 STH2
	( clip start ) #00 STH2kr STA
	( clip wrap ) ;&buff ;scat JSR2
	( clip restore ) #09 STH2r STA
	;&buff

JMP2r
	&buff $16

@build-page-incoming ( -- )

	;incoming
	( exists )
	LDAk ,&continue JCN
		POP2 JMP2r
		&continue
	( html )
	;p-tag ;write-open JSR2
	;&incoming-txt ;write JSR2
	&while
		DUP2 ;add-local JSR2 #20 ;write/char JSR2
		( move to eol ) &eol INC2 LDAk ,&eol JCN
		INC2 LDAk ,&while JCN
	POP2
	;p-tag ;write-close ( .. )

JMP2
	&incoming-txt "<b>Incoming</b>: 20 $1

( tools )

@find-term ( name* -- term* )

	STH2
	;lexicon
	&while
		( move to name ) INC2 INC2
		( test ) DUP2 STH2kr ;scmp JSR2 ,&end JCN
		( move to eol ) &eol INC2 LDAk ,&eol JCN INC2
		LDAk ,&while JCN
	POP2 #0000
	&end
	POP2r

JMP2r

@find-diary ( name* -- diary* )

	STH2
	;diary
	&while
		( skip events ) DUP2 ;no-picture ;log-has-picture JSR2 ,&skip JCN
			POP2r JMP2r
		&skip
		( move to eol ) &eol INC2 LDAk ,&eol JCN INC2
		LDAk ,&while JCN
	POP2 #0000
	POP2r

JMP2r

@find-diary-external ( name* -- diary* )

	;&external #0060 ;mclr JSR2
	;buff STH2k #0030 ;mclr JSR2
	;tmp-path STH2kr ;scpy JSR2
	STH2kr ;scat JSR2
	;log-ext STH2kr ;scat JSR2
	STH2kr #20 [ LIT '_ ] ;cswp JSR2
	( load )
	STH2r .File/name DEO2
	#0060 .File/length DEO2
	;&external DUP2 .File/read DEO2
	( split lines )
	;&external #0a00 ;cswp JSR2

	.File/success DEI2 ORA ,&valid JCN
		POP2 #0000
		&valid

JMP2r
	&external $60

@find-parent ( term* -- parent* )

	DUP2 #0002 SUB2 LDA ;chex JSR2 ,&not-root JCN
		JMP2r
		&not-root
	#00 ;prev-char JSR2 INC2
	( stash depth ) LDAk ;chex JSR2 #01 SUB STH
	;lexicon SWP2
	&loop
		#0001 SUB2 #00 ;prev-char JSR2
		INC2k LDA ;chex JSR2 STHkr NEQ ,&continue JCN
			NIP2 POPr INC2 INC2 INC2 JMP2r
			&continue
		LTH2k ,&loop JCN
	( pop depth ) POPr
	#0002

JMP2r

@log-has-picture ( log* picture* -- flag )

	SWP2 #0006 ADD2 ;sseg ( .. )

JMP2

@make-path ( a* b* c* -- path* )

	;buff STH2k #0030 ;mclr JSR2
	ROT2 STH2kr ;scat JSR2
	SWP2 STH2kr ;scat JSR2
	STH2kr ;scat JSR2
	STH2kr #20 [ LIT '_ ] ;cswp JSR2
	STH2r

JMP2r

@validate-output ( page* -- )

	( look for redlinks )
	&while
		DUP2 ;href-attr SWP2 ;sseg JSR2 #00 EQU ,&continue JCN
			( move to href ) #0006 ADD2
			( strip relative ) LDAk [ LIT '. ] EQU ,&continue JCN
			( strip jumps ) LDAk [ LIT '# ] EQU ,&continue JCN
			( strip http* ) DUP2 ;http-txt SWP2 ;sseg JSR2 ,&continue JCN
			;buff #0030 ;mclr JSR2
			DUP2 ;buff #002f ;mcpy JSR2
			;buff [ LIT '. ] #00 ;cswp JSR2
			;buff [ LIT '_ ] #20 ;cswp JSR2
			( find term )
			;buff ;find-term JSR2 ORA ,&continue JCN
				;buff ;error-broken-link ;print-error JMP2
			&continue
		INC2 LDAk ,&while JCN
	POP2

JMP2r

@include ( path* -- )
	
	.File/name DEO2
	#fffe ;write/head LDA2 STH2k SUB2 .File/length DEO2
	STH2kr .File/read DEO2
	STH2r .File/success DEI2 STH2k ADD2 ;write/head STA2
	( file is missing )
	STH2r ORA ,&no-blank JCN
		;error-include-missing ;print-error JMP2
		&no-blank

JMP2r

( Web framework )

@add-img-tag ( src* alt* -- )

	[ LIT '< ] ;write/char JSR2
	;img-tag ;write JSR2
	;alt-attr ;write-attr JSR2
	;src-attr ;write-attr JSR2
	[ LIT '/ ] ;write/char JSR2
	[ LIT '> ] ;write/char ( .. )

JMP2

@add-local ( name* -- )

	[ LIT '< ] ;write/char JSR2
	[ LIT 'a ] ;write/char JSR2
	DUP2 ;html-ext ;&blank ;make-path JSR2 ;href-attr ;write-attr JSR2
	( self )
	DUP2 ;term/name ;scmp JSR2 #00 EQU ,&not-self JCN
		;self-txt ;class-attr ;write-attr JSR2
		&not-self
	( parent )
	DUP2 ;term/parent ;scmp JSR2 #00 EQU ,&not-parent JCN
		;parent-txt ;class-attr ;write-attr JSR2
		&not-parent
	[ LIT '> ] ;write/char JSR2
	;write JSR2
	;a-tag ;write-close ( .. )

JMP2
	&blank $1

( generics )

@write-attr ( body* attr* -- )

	[ LIT 20 ] ,write/char JSR
	,write JSR
	[ LIT '= ] ,write/char JSR
	[ LIT '" ] ,write/char JSR
	,write JSR
	[ LIT '" ] ,write/char JSR

JMP2r

@write-open ( str* -- )

	STH2
	LIT '< ,write/char JSR
	STH2r ,write JSR
	LIT '> ,write/char JSR

JMP2r

@write-auto ( str* -- )

	STH2k ,write-open JSR
	,write JSR
	STH2r

@write-close ( str* -- )

	STH2
	LIT '< ,write/char JSR
	LIT '/ ,write/char JSR
	STH2r ,write JSR
	LIT '> ,write/char JMP

JMP2r

@write ( addr* -- )

	LDAk #00 EQU ,&end JCN
	&while
		LDAk ,&char JSR
		INC2 LDAk ,&while JCN
	&end
	POP2

JMP2r
	&char ( char -- ) 
		[ LIT2 &head $2 ] STH2k STA STH2r INC2 ,&head STR2 
	JMP2r

( fancyful things )

@prev-char ( addr* char -- addr* )

	STH
	&while
		LDAk STHkr EQU ,&end JCN
		LDAk #00 EQU ,&end JCN
		#0001 SUB2 LDAk ,&while JCN
	&end
		POPr

JMP2r

@next-char ( addr* char -- addr* )

	STH
	&while
		LDAk STHkr EQU ,&end JCN
		LDAk #00 EQU ,&end JCN
		INC2 LDAk ,&while JCN
	&end
		POPr

JMP2r

( helpers )

@chex ( char -- hex )

	DUPk #2f GTH SWP #3a LTH AND ,&num JCN
	DUPk #40 GTH SWP #5b LTH AND ,&uca JCN
	DUPk #60 GTH SWP #7b LTH AND ,&lca JCN
	POP #00 JMP2r
	&num #30 SUB JMP2r
	&uca #4b SUB JMP2r
	&lca #6b SUB

JMP2r

@cswp ( str* a b -- )

	STH STH
	&while
		LDAk STHkr NEQ ,&continue JCN
			DUP2 OVRr STHr ROT ROT STA
			&continue
		INC2 LDAk ,&while JCN
	POP2 POP2r

JMP2r


@scap ( str* -- end* ) LDAk #00 NEQ JMP JMP2r &w INC2 LDAk ,&w JCN JMP2r
@slen ( str* -- len* ) DUP2 ,scap JSR SWP2 SUB2 JMP2r
@scat ( src* dst* -- ) DUP2 ,slen JSR ADD2
@scpy ( src* dst* -- ) STH2 &w LDAk STH2kr STA INC2r INC2 LDAk ,&w JCN POP2 #00 STH2r STA JMP2r
@scmp ( a* b* -- f ) STH2 &l LDAk LDAkr STHr ANDk #00 EQU ,&e JCN NEQk ,&e JCN POP2 INC2 INC2r ,&l JMP &e NIP2 POP2r EQU JMP2r
@sseg ( a* b* -- f ) STH2 &l LDAk LDAkr STHr NEQ ,&e JCN INC2k LDA #00 EQU ,&e JCN INC2 INC2r ,&l JMP &e LDA LDAr STHr EQU JMP2r

@mclr ( src* len* -- ) OVR2 ADD2 SWP2 &l STH2k #00 STH2r STA INC2 GTH2k ,&l JCN POP2 POP2 JMP2r
@mcpy ( src* dst* len* -- ) SWP2 STH2 OVR2 ADD2 SWP2 &loop LDAk STH2kr STA INC2r INC2 GTH2k ,&loop JCN POP2 POP2 POP2r JMP2r

@print ( hex* -- ) SWP ,&b JSR &b DUP #04 SFT ,&c JSR &c #0f AND DUP #09 GTH #27 MUL ADD #30 ADD #18 DEO JMP2r
@print-str ( str* -- ) &w LDAk #18 DEO INC2 LDAk ,&w JCN POP2 JMP2r

@print-error ( name* msg* -- )

	#0a18 DEO
	SWP2
	,print-str JSR
	#2018 DEO
	,print-str JSR
	#0d18 DEO
	#0a18 DEO
	#010f DEO

BRK

@log-ext "-log $1
@map-ext "-map $1
@html-ext ".html $1
@htm-ext ".htm $1
@jpg-ext ".jpg $1
@doctype "<!DOCTYPE 20 "html> $1
@html-tag "html $1
@head-tag "head $1
@title-tag "title $1
@body-tag "body $1
@nav-tag "nav $1
@main-tag "main $1
@p-tag "p $1
@ul-tag "ul $1
@li-tag "li $1
@a-tag "a $1
@img-tag "img $1
@code-tag "code $1
@figure-tag "figure $1
@figcaption-tag "figcaption $1
@src-attr "src $1
@alt-attr "alt $1
@href-attr "href $1
@class-attr "class $1
@title-txt "XXIIVV $1
@mdash-entity-txt "&mdash; $1
@http-txt "http $1
@index-txt "index $1
@journal-txt "journal $1
@self-txt "self $1
@parent-txt "parent $1
@lexicon-path "src/tables/lexicon $1
@tmp-path "tmp/ $1
@htm-path "src/htm/ $1
@output-path "site/ $1
@diary-path "../media/diary/ $1
@meta-head-path "src/htm/meta_head.htm $1
@meta-header-path "src/htm/meta_header.htm $1
@meta-footer-path "src/htm/meta_footer.htm $1
@no-picture "000 $1
@error-include-missing "include_missing $1
@error-broken-link "--redlink $1
@error-term-name-size "--term_name_size_exceeded $1
@error-output-size "--output_size_exceeded $1

@lexicon $2000
@diary $1000
@incoming $1000
