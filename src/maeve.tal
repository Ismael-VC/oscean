( Meanwhile, in the Atari Gang's car )

|a0 @File &vector $2 &success $2 &stat $2 &delete $1 &append $1 &name $2 &length $2 &read $2 &write $2

|0000

	@maxlength $2
	@stats &terms $2 &links $2 &diaries $2
	@buf &path $30 &link $30

|0100 ( -> )

	( append mode )
	#01 .File/append DEO
	( load lexicon )
	;lexicon-path .File/name DEO2
	#2000 .File/length DEO2
	;lexicon
		DUP2 .File/read DEO2
		#0a #00 ;cswp JSR2
	( save bounds )
	#f000 ;workarea SUB2 .maxlength STZ2
	( I'm mad as hell, i want to kill! )
	;parse-lexicon JSR2
	;terms-txt .stats/terms LDZ2 ;print-stat JSR2
	;links-txt .stats/links LDZ2 ;print-stat JSR2
	;parse-diary JSR2
	;diaries-txt .stats/diaries LDZ2 ;print-stat JSR2
	( halt. )
	#010f DEO

BRK

( lexicon )

@parse-lexicon ( term* -- )

	;lexicon
	&while
		( move to name ) INC2 INC2
		( setup files ) DUP2 ,parse-term JSR
		( goto eol ) &eol INC2 LDAk ,&eol JCN INC2
		LDAk ,&while JCN
	POP2

JMP2r

@parse-term ( term* -- )
	
	( clear outgoing )
	;outgoing #1000 ;mclr JSR2
	( load htm )
	;htm-path OVR2 ;htm-ext ;make-path JSR2 .File/name DEO2
	.maxlength LDZ2 .File/length DEO2
	;workarea .File/read DEO2
	( null terminate )
	#00 ;workarea .File/success DEI2 ADD2 STA
	( errors on too large )
	.File/success DEI2 .maxlength LDZ2 NEQ2 ,&size-valid JCN
		;error/include-large SWP2 ;print-error JMP2
		&size-valid
	( errors on empty )
	.File/success DEI2 #0000 GTH2 ,&exist-valid JCN
		;error/include-missing SWP2 ;print-error JMP2
		&exist-valid
	;workarea ,validate JSR
	( stats ) .stats/terms LDZ2k INC2 ROT STZ2
	POP2

JMP2r
	
@validate ( page* -- )

	&while
		;href-attr OVR2 ;sseg JSR2 #00 EQU ,&continue JCN
			( move to href ) #0006 ADD2
			( strip relative ) LDAk [ LIT '. ] EQU ,&continue JCN
			( strip jumps ) LDAk [ LIT '# ] EQU ,&continue JCN
			( strip http* ) DUP2 ;http-txt SWP2 ;sseg JSR2 ,&continue JCN
			;buf/link STH2k #0030 ;mclr JSR2
			DUP2 STH2kr #002f ;mcpy JSR2
			STH2kr [ LIT '. ] #00 ;cswp JSR2
			STH2kr [ LIT '_ ] #20 ;cswp JSR2
			( find term )
			STH2r ,find-term JSR ORA ,&found JCN
				;buf/link ;error/local-missing ;print-error JMP2
				&found
			( connect incoming )
			OVR2 ;buf/link ,connect-incoming JSR
			&continue
		INC2 LDAk ,&while JCN
	POP2

JMP2r

@find-term ( name* -- term* )

	STH2
	;lexicon
	&while
		( move to name ) INC2 INC2
		( test ) DUP2 STH2kr ;scmp JSR2 ,&end JCN
		( move to eol ) &eol INC2 LDAk ,&eol JCN INC2
		LDAk ,&while JCN
	POP2 #0000
	&end
	POP2r

JMP2r

@connect-incoming ( src* dst* -- )

	( check for duplicates )
	;outgoing OVR2 ;sfnd JSR2 #ffff EQU2 ,&no-duplicate JCN
		;error/duplicate-outgoing ;print-str JSR2
		OVR2 ;print-str JSR2 #2f18 DEO DUP2 ;print-str JSR2 #0a18 DEO
		&no-duplicate
	( record in outgoing )
	DUP2 ;outgoing ;scat JSR2
	#0a ;outgoing ;sput JSR2
	( write )
	;tmp-path SWP2 ;map-ext ;make-path JSR2 .File/name DEO2
	DUP2 ;slen JSR2 .File/length DEO2
	.File/write DEO2
	#0001 .File/length DEO2
	;&lb .File/write DEO2
	( stats ) 
	.stats/links LDZ2k INC2 ROT STZ2

JMP2r
	&lb 0a

( diary )

@parse-diary ( -- )

	;diary-path-pages/end ;diary-path-pages
	&loop
		( clear workarea )
		LDA2k .File/name DEO2
		.maxlength LDZ2 .File/length DEO2
		;workarea 
			DUP2 .maxlength LDZ2 ;mclr JSR2
			DUP2 .File/read DEO2
			DUP2 #0a #00 ;cswp JSR2
			,parse-diary-page JSR
		INC2 INC2 GTH2k ,&loop JCN
	POP2 POP2

JMP2r

@parse-diary-page ( page* -- )

	&while
		DUP2 ,&log STR2
		#000a ADD2
		( bound ) DUP2 #09 ;next-char JSR2 STH2
		( clip ) #00 STH2kr STA
		( flag ) DUP2 ;find-term JSR2
		( test for exist )
			ORAk ,&no-missing JCN
				;error/diary-term-missing ROT2 ;print-error JMP2
				&no-missing
			,&term STR2
		( unclip ) #09 STH2r STA
		[ LIT2 &log $2 ] [ LIT2 &term $2 ] ,connect-diaries JSR
		( goto eol ) &eol INC2 LDAk ,&eol JCN INC2
		LDAk ,&while JCN
	POP2

JMP2r

@connect-diaries ( diary* term* -- )

	;tmp-path SWP2 ;log-ext ;make-path JSR2 .File/name DEO2
	DUP2 ;slen JSR2 .File/length DEO2
	.File/write DEO2
	( linebreak )
	#0001 .File/length DEO2
	;&lb .File/write DEO2
	( stats ) 
	.stats/diaries LDZ2k INC2 ROT STZ2

JMP2r
	&lb 0a

@make-path ( a* b* c* -- path* )

	;buf/path STH2k #0030 ;mclr JSR2
	( a ) ROT2 STH2kr ;scpy JSR2
	( b ) SWP2 STH2kr ;scat JSR2
	( c ) STH2kr ;scat JSR2
	STH2kr #20 [ LIT '_ ] ;cswp JSR2
	STH2r

JMP2r

@print-stat ( number* type* -- )

	;print-dec JSR2
	#2018 DEO
	,print-str JSR
	#0a18 DEO

JMP2r

@print-error ( name* msg* -- )

	#0a18 DEO
	SWP2
	,print-str JSR
	#2018 DEO
	,print-str JSR
	#0d18 DEO
	#0a18 DEO
	#010f DEO

BRK

@print-str ( str* -- )

	#0001 SUB2
	&while
		INC2 LDAk DUP #18 DEO ,&while JCN
	POP2

JMP2r

( generics )

@next-char ( addr* char -- addr* )

	STH
	&while
		LDAk STHkr EQU ,&end JCN
		LDAk #00 EQU ,&end JCN
		INC2 LDAk ,&while JCN
	&end
		POPr

JMP2r

@cswp ( str* a b -- )

	STH STH
	&while
		LDAk STHkr NEQ ,&continue JCN
			DUP2 OVRr STHr ROT ROT STA
			&continue
		INC2 LDAk ,&while JCN
	POP2 POP2r

JMP2r

@sfnd ( src* target* -- addr* )

	STH2
	&while
		STH2kr OVR2 ,sseg JSR #00 EQU ,&continue JCN
			POP2r JMP2r
			&continue
		INC2 LDAk ,&while JCN
	POP2
	POP2r
	#ffff

JMP2r

@scap ( str* -- end* ) LDAk #00 NEQ JMP JMP2r &w INC2 LDAk ,&w JCN JMP2r
@sput ( chr str* -- ) ,scap JSR STA JMP2r
@slen ( str* -- len* ) DUP2 ,scap JSR SWP2 SUB2 JMP2r
@scat ( src* dst* -- ) DUP2 ,slen JSR ADD2
@scpy ( src* dst* -- ) STH2 &w LDAk STH2kr STA INC2r INC2 LDAk ,&w JCN POP2 #00 STH2r STA JMP2r
@scmp ( a* b* -- f ) STH2 &l LDAk LDAkr STHr ANDk #00 EQU ,&e JCN NEQk ,&e JCN POP2 INC2 INC2r ,&l JMP &e NIP2 POP2r EQU JMP2r
@sseg ( a* b* -- f ) STH2 &l LDAk LDAkr STHr NEQ ,&e JCN INC2k LDA #00 EQU ,&e JCN INC2 INC2r ,&l JMP &e LDA LDAr STHr EQU JMP2r

@mclr ( src* len* -- ) OVR2 ADD2 SWP2 &l STH2k #00 STH2r STA INC2 GTH2k ,&l JCN POP2 POP2 JMP2r
@mcpy ( src* dst* len* -- ) SWP2 STH2 OVR2 ADD2 SWP2 &loop LDAk STH2kr STA INC2r INC2 GTH2k ,&loop JCN POP2 POP2 POP2r JMP2r

( debugging )

@print ( short* -- )

	SWP ,&byte JSR
	&byte ( byte -- ) DUP #04 SFT ,&char JSR
	&char ( char -- ) #0f AND DUP #09 GTH #27 MUL ADD #30 ADD #18 DEO

JMP2r

@print-dec ( value* -- )

	#2710 DIV2k DUP #30 ADD #18 DEO MUL2 SUB2
	#03e8 DIV2k DUP #30 ADD #18 DEO MUL2 SUB2
	#0064 DIV2k DUP #30 ADD #18 DEO MUL2 SUB2
	#000a DIV2k DUP #30 ADD #18 DEO MUL2 SUB2
	#30 ADD #18 DEO POP

JMP2r

@terms-txt "terms $1
@links-txt "links $1
@diaries-txt "diaries $1
@http-txt "http $1
@href-attr "href $1
@htm-ext ".htm $1
@log-ext "-log $1
@map-ext "-map $1
@lexicon-path "src/tables/lexicon $1

@diary-paths
	&3 "src/tables/diary/15-19 $1
	&2 "src/tables/diary/10-14 $1
	&1 "src/tables/diary/05-09 $1
	&0 "src/tables/diary/00-04 $1

@diary-path-pages
	:diary-paths/3
	:diary-paths/2
	:diary-paths/1
	:diary-paths/0
	&end

@htm-path "src/htm/ $1
@tmp-path "tmp/ $1

@error
	&diary-term-missing "-- 20 "diary_term_missing 20 $1
	&include-missing "-- 20 "include_missing 20 $1
	&include-large "-- 20 "include_too_large 20 $1
	&local-missing "-- 20 "local_missing 20 $1
	&duplicate-outgoing "-- 20 "duplicate_outgoing 20 $1

@lexicon $2000
@outgoing $1000
@workarea
