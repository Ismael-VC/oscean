<h2>Storage</h2>

<p>If, for example, we use 8 bits to store a number with decimal points, we could decide to store it this way. The high and low nibbles have the same resolution.</p>

<table border='1'>
	<tr><th colspan="4">Integer Part</th><th colspan="4">Decimal Points</th></tr>
	<tr><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><th>0.0</th></tr>
	<tr><td>0</td><td>0</td><td class='clr2'>1</td><td class='clr2'>1</td><td class='clr2'>1</td><td>0</td><td class='clr2'>1</td><td>0</td><th>3.a</th></tr>
	<tr><td>0</td><td class='clr2'>1</td><td>0</td><td>0</td><td>0</td><td class='clr2'>1</td><td>0</td><td class='clr2'>1</td><th>4.5</th></tr>
</table>

<h2>Conversion</h2>

<p>To turn a regular integer into fixed point, shift left by the number of fractional bits(width << bits), and to turn a fixed point into integer, shift right by the number of fractional bits(width >> bits).</p>

<h2>Arithmetic</h2>

<h3>Multiplication</h3>

<p>To multiply, you do the multiply, and then you shift right by the number of fractional bits.</p>

<pre>(3.8 * 2.0) >> 8</pre>

<h3>Division</h3>

<p>To divide, you first shift the numerator left by the number of fractional bits, then you do the division.</p>

<pre>(3.8 << 8) / 2.0</pre>

<style>
.clr0 { background:white; color:black; }
.clr1 { background:black; color:white; }
.clr2 { background:#72dec2; color:black; }
.clr3 { background:#ff0000; color:black; }
code.op { background: #ddd; color: black; font-size: smaller; display: inline-block; padding: 0px 2px; margin-right: 3px; }
pre span.comment { color:#666; }
</style>