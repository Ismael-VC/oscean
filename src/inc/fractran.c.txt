#include <stdio.h>

/* 
Copyright (c) 2020 Devine Lu Linvega

Permission to use, copy, modify, and distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE.
*/

typedef struct Fraction {
	unsigned int num, den;
} Fraction;

typedef struct Machine {
	int len;
	Fraction acc, program[256];
} Machine;

static int
gcd(int a, int b)
{
	if(b == 0)
		return a;
	return gcd(b, a % b);
}

static Fraction
Frac(unsigned int num, unsigned int den)
{
	Fraction f;
	unsigned int d = gcd(num, den);
	f.num = num / d;
	f.den = den / d;
	return f;
}

static void
printstate(Machine *m)
{
	unsigned int fac = 2, num = m->acc.num;
	printf("[%d] ", num);
	while(num > 1) {
		if(num % fac == 0) {
			unsigned int pow = 1;
			printf("r%02u=", fac);
			num /= fac;
			while(!(num % fac)) {
				num /= fac;
				pow++;
			}
			printf("%02u", pow);
			if(num != 1)
				putchar(' ');
		} else
			fac++;
	}
	putchar('\n');
}

static void
run(Machine *m)
{
	int i = 0, steps = 0;
	while(i < m->len && m->acc.num) {
		Fraction res, *f = &m->program[i++];
		res = Frac(m->acc.num * f->num, m->acc.den * f->den);
		printf("%u Ã— %u/%u = %u/%u \n",
			m->acc.num,
			f->num,
			f->den,
			res.num,
			res.den);
		if(res.den == 1) {
			m->acc = res;
			printstate(m);
			i = 0;
		}
		steps++;
	}
	if(steps) {
		printstate(m);
		printf("Completed in %d steps.\n", steps);
	}
}

static void
push(Machine *m, char *w)
{
	Fraction f;
	if(!m->acc.den) {
		if(sscanf(w, "%u", &m->acc.num) > 0)
			m->acc.den = 1;
		return;
	}
	if(sscanf(w, "%u/%u", &f.num, &f.den) > 0)
		m->program[m->len++] = f;
}

static Machine m;

int
main(void)
{
	int len = 0;
	char c, word[64];
	while((c = fgetc(stdin)) != EOF) {
		if(c == ' ' || c == '\n') {
			word[len] = '\0';
			len = 0;
			push(&m, word);
		} else
			word[len++] = c;
		if(c == '\n')
			break;
	}
	printstate(&m);
	run(&m);
	return 0;
}
