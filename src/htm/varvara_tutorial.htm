<h2>We'll begin with drawing a <b>pixel</b>, from which lines, letters, shapes and other primitives can be derived.</h2>

<p>(WORK IN PROGRESS--)</p>

<pre>
@draw-pixel ( -- )
	#0010 .Screen/x DEO2   <span style='float:right; color:#777'>a000 1080 2837</span>
	#0020 .Screen/y DEO2   <span style='float:right; color:#777'>a000 2080 2a37</span>
	#01 .Screen/pixel DEO  <span style='float:right; color:#777'>a001 2e17</span>
JMP2r
</pre>

<img src='../media/generic/pixel.heart.png' width='200' style='float:right'/>

<p>One of the many things that <a href='plan9.html'>Plan 9</a> has made quite clear to me, was that interface design can be fun. An easy access to a pixel buffer makes all the difference for fostering an ecosystem of personalized applications. </p>

<p>The Famicom's picture processing unit uses little 8x8 tiles, which fit neatly in 8 bytes of memory, where each byte is a row, and each monochromatic pixel is a bit. This tile size is small enough that someone with a pen and paper could mentally decipher its content, and large enough to contain a letter or a pictogram.</p>

<pre>
@draw-heart ( -- )
	#0010 .Screen/x DEO2   <span style='float:right; color:#777'>a000 1080 2837</span>
	#0020 .Screen/y DEO2   <span style='float:right; color:#777'>a000 2080 2a37</span>
	;heart-icn .Screen/addr DEO2 <span style='float:right; color:#777'>a001 2e80 2c37</span>
	#01 .Screen/sprite DEO  <span style='float:right; color:#777'>a001 2e17</span>
JMP2r

@heart-icn
	006c fefe 7c38 1000
</pre>

<img src='../media/generic/pixel.smile.png' width='200' style='float:right'/>

<p>The Neo Geo's graphics processor assembles tiles into larger sprites by drawing them in a sequence, either vertically or horizontally.</p>

<p>We can draw a 2x2 picture by sending a single extra drawing instruction for the bottom row of the picture, we can leverage this sprite drawing system to draw larger real-time graphics with very little boilerplate and change in bytecode size.</p>

<pre>
@draw-smile ( -- )
	#0010 .Screen/x DEO2   <span style='float:right; color:#777'>a000 1080 2837</span>
	#0020 .Screen/y DEO2   <span style='float:right; color:#777'>a000 2080 2a37</span>
	;smile-icns .Screen/addr DEO2 <span style='float:right; color:#777'>a001 3780 2c37</span>
	#16 .Screen/auto DEO <span style='float:right; color:#777'>a016 2617</span>
	#01 .Screen/sprite DEOk DEO <span style='float:right; color:#777'>a001 2f97 17</span>
JMP2r

@smile-icns
	( first row )
	0007 1820 2040 4044 00e0 1804 0402 0222
	( second row ) 
	4040 4423 2018 0700 0202 22c4 0418 e000
</pre>

<h3>Audio Sample Format</h3>

<p>All samples used by the audio devices are mono and unsigned 8-bit (also known as <b>u8</b>), so the space taken up by samples is minimized. The sample rate of the samples depends on <b>length*</b><b>length*</b>='1'>
	<tr><th><code>length*</code></th><th>Sample type</th><th>Sample rate</th></tr>
	<tr><td>&gt; 256</td><td>Middle-C pitched sample</td><td>44,100 Hz</td></tr>
	<tr><td>2â€“256</td><td>Single wavelength</td><td>Variable</td></tr>
</table>

<p>Long samples are assumed to be already pitched to Middle C and will loop (unless No Loop is 1) until the end of the envelope. To play the sample at the same rate as it was recorded, write the Middle C MIDI note number, <code>#3c</code>, to <code>pitch</code>. To play at double or half speed, for example, write an octave higher or lower to <code>pitch</code>.</p>

<p>The minimum sample size that can be pitched at 44.1 kHz to Middle C with reasonable accuracy is 337 bytes long, which represents two cycles of the 261 Hz wave. The single wavelength mode in Uxn allows much smaller samples to be used, even down to only two bytes for a square wave. In this mode the length of the entire sample is taken to be one cycle of the Middle C note, so the pitch is not heard to vary even if <b>length*</b> were to change between sample plays.</p>

