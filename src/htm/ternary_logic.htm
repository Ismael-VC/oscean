<h2>Notes on Ternary Logic.</h2>

<p>Along with ternary arithmetic, a computer built of <a href='ternary.html'>ternary</a> hardware can also exploit ternary logic. Consider the task of comparing two numbers. In a machine based on binary logic, comparison is often a two-stage process. First you ask, "Is x less than y?"; depending on the answer, you may then have to ask a second question, such as "Is x equal to y?" Ternary logic simplifies the process: A single comparison can yield any of three possible outcomes: "less," "equal" and "greater." </p>

<h3>Reversible Gates</h3>

<ul>
	<li>NOP: The most dull gate (number 8) this does not change the input. It is its own complement. Applying it any number of times get you back to your intial value. </li>
	<li>NEG Gate: Balanced ternary gates have a tighter relationship between logical and mathmatical negation. The are the same bitwise operator. It is its own complement. Applying it multiple time every even application brings back the intial value.</li>
	<li>INC and DEC Gate: These gates can arithmetically be thought of as single trit increment or decrement without carry, but with roll over. These gates are also complementary . Every 3 applications of either one of these gates in a row bring back the intial value.</li>
	<li>Gate 2 & 6: The these gates are most intuitively expressed as combinations of NEG, INC and DEC.</li>
</ul>

<p>To learn more, see <a href='reversible_computing.html'>reversible computing</a>.</p>

<h3>Single Input Gates</h3>

<table border='1'>
	<tr><th>+</th><th>0</th><th>-</th><th>Number</th><th>Name</th><th>Definitions</th></tr>
	<tr><td>-</td><td>-</td><td>-</td><td>-13</td><td>False</td><td>NEG(LAX(LAX))</td></tr>
	<tr><td>-</td><td>-</td><td>0</td><td>-12</td><td></td><td>NEG(LAX)</td></tr>
	<tr><td>-</td><td>-</td><td>+</td><td>-11</td><td></td><td>DEC(DEC(LAX))</td></tr>
	<tr><td>-</td><td>0</td><td>-</td><td>-10</td><td>Abn</td><td>NEG(LAX(DEC))</td></tr>
	<tr><td>-</td><td>0</td><td>0</td><td>-9</td><td></td><td>DEC(LAX(NEG))</td></tr>
	<tr class='rev'><td>-</td><td>0</td><td>+</td><td>-8</td><td>Neg</td><td>NEG</td></tr>
	<tr><td>-</td><td>+</td><td>-</td><td>-7</td><td>isZ</td><td>DEC(DEC(LAX(DEC)))</td></tr>
	<tr class='rev'><td>-</td><td>+</td><td>0</td><td>-6</td><td>Inc</td><td>DEC(DEC)</td></tr>
	<tr><td>-</td><td>+</td><td>+</td><td>-5</td><td></td><td>DEC(NEG(LAX(NEG)))</td></tr>
	<tr><td>0</td><td>-</td><td>-</td><td>-4</td><td></td><td>NEG(LAX(NEG))</td></tr>
	<tr><td>0</td><td>-</td><td>0</td><td>-3</td><td></td><td>DEC(LAX(DEC))</td></tr>
	<tr class='rev'><td>0</td><td>-</td><td>+</td><td>-2</td><td>Dec</td><td>DEC</td></tr>
	<tr><td>0</td><td>0</td><td>-</td><td>-1</td><td></td><td>DEC(LAX)</td></tr>
	<tr><td>0</td><td>0</td><td>0</td><td>0</td><td>Clear</td><td>DEC(LAX(LAX))</td></tr>
	<tr><td>0</td><td>0</td><td>+</td><td>1</td><td></td><td>NEG(DEC(LAX))</td></tr>
	<tr class='rev'><td>0</td><td>+</td><td>-</td><td>2</td><td></td><td>NEG(DEC)</td></tr>
	<tr><td>0</td><td>+</td><td>0</td><td>3</td><td></td><td>NEG(DEC(LAX(DEC)))</td></tr>
	<tr><td>0</td><td>+</td><td>+</td><td>4</td><td></td><td>LAX(NEG)</td></tr>
	<tr><td>+</td><td>-</td><td>-</td><td>5</td><td>Floor</td><td>DEC(DEC(LAX(NEG)))</td></tr>
	<tr class='rev'><td>+</td><td>-</td><td>0</td><td>6</td><td></td><td>DEC(NEG)</td></tr>
	<tr><td>+</td><td>-</td><td>+</td><td>7</td><td></td><td>DEC(NEG(LAX(DEC)))</td></tr>
	<tr class='rev'><td>+</td><td>0</td><td>-</td><td>8</td><td>NOP</td><td>NEG(NEG)</td></tr>
	<tr><td>+</td><td>0</td><td>0</td><td>9</td><td>Flat</td><td>NEG(DEC(LAX(NEG)))</td></tr>
	<tr><td>+</td><td>0</td><td>+</td><td>10</td><td>Abs</td><td>LAX(DEC)</td></tr>
	<tr><td>+</td><td>+</td><td>-</td><td>11</td><td>Ceil</td><td>DEC(NEG(LAX))</td></tr>
	<tr><td>+</td><td>+</td><td>0</td><td>12</td><td>Lax</td><td>LAX</td></tr>
	<tr><td>+</td><td>+</td><td>+</td><td>13</td><td>True</td><td>LAX(LAX)</td></tr>
</table>

<ul>
	<li><a href='https://github.com/tedkotz/ternary/tree/master/math' target='_blank'>Mathematical Properties</a></li>
</ul>

<style>
	.rev { background:#72dec2 }
</style>

