<h2>CHR is a 2-bit graphics format.</h2>

<p>The <code>CHR</code> file contains a series of bits equivalent to pixels in a 8x8 tile. The data for each tile is made up of 128 bits, where the first 64 bits are the first channel, the next 64 bits the second channel, and their <a href='https://en.wikipedia.org/wiki/Planar_(computer_graphics)' target='_blank'>overlap</a> result in a total of 4 possible colors.</p>

<table border='1'>
	<tr><th colspan="8">ch1 + ch2</th><th colspan="2">hex</th></tr>
	<tr><td class='col1'>1</td><td class='col1'>1</td><td class='col1'>1</td><td class='col1'>1</td><td class='col1'>1</td><td>0</td><td>0</td><td>0</td><td><code>f8</code></td><td><code>00</code></td></tr>
	<tr><td class='col1'>1</td><td class='col1'>1</td><td class='col1'>1</td><td class='col1'>1</td><td class='col1'>1</td><td>0</td><td>0</td><td>0</td><td><code>f8</code></td><td><code>00</code></td></tr>
	<tr><td class='col1'>1</td><td class='col1'>1</td><td class='col3'>3</td><td class='col3'>3</td><td class='col3'>3</td><td class='col2'>2</td><td class='col2'>2</td><td>0</td><td><code>f8</code></td><td><code>3e</code></td></tr>
	<tr><td class='col1'>1</td><td class='col1'>1</td><td class='col3'>3</td><td class='col3'>3</td><td class='col3'>3</td><td class='col2'>2</td><td class='col2'>2</td><td>0</td><td><code>f8</code></td><td><code>3e</code></td></tr>
	<tr><td class='col1'>1</td><td class='col1'>1</td><td class='col3'>3</td><td class='col3'>3</td><td class='col3'>3</td><td class='col2'>2</td><td class='col2'>2</td><td>0</td><td><code>f8</code></td><td><code>3e</code></td></tr>
	<tr><td>0</td><td>0</td><td class='col2'>2</td><td class='col2'>2</td><td class='col2'>2</td><td class='col2'>2</td><td class='col2'>2</td><td>0</td><td><code>00</code></td><td><code>3e</code></td></tr>
	<tr><td>0</td><td>0</td><td class='col2'>2</td><td class='col2'>2</td><td class='col2'>2</td><td class='col2'>2</td><td class='col2'>2</td><td>0</td><td><code>00</code></td><td><code>3e</code></td></tr>
	<tr><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td><code>00</code></td><td><code>00</code></td></tr>
</table>

<p>This is the standard format for the <a href='famicom.html'>Famicom</a> and <a href='varvara.html'>Varvara</a> ecosystems, to view and edit chr files, try <a href='nasu.html'>Nasu</a>. To convert images from the <a href='tga_format.html'>tga format</a>, use <a href='https://git.sr.ht/~rabbits/chr-format' target='_blank'>tgachr</a>.</p>

<pre>
Uint8 tile[16] = {
	0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x3e, 0x3e, 0x3e, 0x3e, 0x3e, 0x00
};

void
draw_chr(Uint32 *dst, int x, int y, Uint8 *sprite)
{
	int v, h;
	for(v = 0; v < 8; v++)
		for(h = 0; h < 8; h++) {
			int ch1 = ((sprite[v] >> h) & 0x1);
			int ch2 = (((sprite[v + 8] >> h) & 0x1) << 1);
			put_pixel(dst, x + 7 - h, y + v, ch1 + ch2);
		}
}
</pre>

<ul>
	<li><a href='https://git.sr.ht/~rabbits/chr-format' target='_blank'>ICN/CHR Toolchain</a>, viewer and converter.</li>
</ul>

<style>
	.col1 { background: #000000; color:white }
	.col2 { background: #ff0000; color:white }
	.col3 { background: #72dec2; color:white }
</style>
