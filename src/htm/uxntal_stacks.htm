<h2>Uxntal stacks</h2>

<p>In stack-machine programming, there are no precedence rules, the calculations are merely performed in the sequence in which they are presented. The order with which elements come off a stack is known as <b>last in, first out</b>. In the stack <i>a b c</i>, the <i>c</i> item was the last to be added, and will be the first to be removed.</p>

<pre>
#12 <span style='float:right'>12</span>
#3456<span style='float:right'>34 56</span>
#12 STH <span style='float:right;color:#777'>12</span>
LIT2r 1234 <span style='float:right;color:#777'>12 34</span>
LIT2r 1234 STHr <span style='float:right;color:#777'> 12</span> <span style='float:right'>34</span>
</pre>

<p>All programming in Unxtal is done by manipulating the <i>working stack</i>, and <i>return stack</i>. Each stack contains 254 bytes, items from one stack can be moved into the other. Here are the stack primitives: </p>

<table border='1'>
	<tr><th>POP</th><td>a b</td><td>Discard top item.</td></tr>
	<tr><th>NIP</th><td>a c</td><td>Discard second item.</td></tr>
	<tr><th>SWP</th><td>a c b</td><td>Move second item to top.</td></tr>
	<tr><th>ROT</th><td>b c a</td><td>Move third item to top.</td></tr>
	<tr><th>DUP</th><td>a b c c</td><td>Copy top item.</td></tr>
	<tr><th>OVR</th><td>a b c b</td><td>Copy second item to top.</td></tr>
</table>

<p>Shorts are made of two bytes, each byte can be manipulated individually.</p>

<pre>
#12 #34 POP <span style='float:right'>12</span>
#12 #34 NIP <span style='float:right'>34</span>
#1234 DUP <span style='float:right'>12 34 34</span>
#abcd #5678 SWP2 <span style='float:right'>56 78 ab cd</span>
#1234 #5678 NIP2 <span style='float:right'>56 78</span>
</pre>

<p>A <i>literal</i> is a byte or short value, it is prefixed in the program by the <a href='#lit'>LIT</a> opcode, some words will automatically prefix the value with the opcode:</p>

<table border="1">
	<tr><td></td><th>Byte</th><th>Char</th><th>Relative</th><th>ZeroPage</th><th>Absolute*</th><th>Short*</th></tr>
	<tr><td><i>Literal</i></td><td><code>#ab</code></td><td></td><td><code>,label</code></td><td><code>.label</code></td><td><code>;label</code></td><td><code>#abcd</code></td></tr>
	<tr><td><i>Plain</i></td><td><code>ab</code></td><td><code>"Q</code></td><td><code>_label</code></td><td><code>-label</code></td><td><code>=label</code></td><td><code>abcd</code></td></tr>
</table>
