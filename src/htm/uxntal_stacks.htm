<h2>Uxntal stacks</h2>

<p>In <a href='https://concatenative.org/wiki/view/Concatenative%20language' target='_blank'>concatenative programming</a>, there are no precedence rules, the calculations are merely performed in the sequence in which they are presented. The order with which elements come off a stack is known as <b>last in, first out</b>. In the stack <i>a b c</i>, the <i>c</i> item was the last to be added, and will be the first to be removed.</p>

<pre>
#01 #02 #03 ADD<span style='float:right'>01 05</span>
</pre>

<p>All programming in Unxtal is done by manipulating the <i>working stack</i>, and <i>return stack</i>. Each stack contains 255 bytes, items from one stack can be moved into the other. Here are some stack primitives and their effect: </p>

<table border='1'>
	<tr><th>POP</th><td>a b</td><td>Discard top item.</td></tr>
	<tr><th>NIP</th><td>a c</td><td>Discard second item.</td></tr>
	<tr><th>SWP</th><td>a c b</td><td>Move second item to top.</td></tr>
	<tr><th>ROT</th><td>b c a</td><td>Move third item to top.</td></tr>
	<tr><th>DUP</th><td>a b c c</td><td>Copy top item.</td></tr>
	<tr><th>OVR</th><td>a b c b</td><td>Copy second item to top.</td></tr>
</table>

<p>A byte is a number between 0-256, a short is made of two bytes, each byte in a short can be manipulated individually:</p>

<pre>
#0a #0b POP <span style='float:right'>0a</span>
#12 #3456 NIP <span style='float:right'>12 56</span>
#1234 DUP <span style='float:right'>12 34 34</span>
</pre>

