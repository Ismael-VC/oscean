<h2>Brainfuck is one of the most famous esolangs, and has inspired the creation of a host of other languages.</h2>

<p>Brainfuck operates on an array of memory cells, each initially set to zero. A pointer is initially pointing to the first memory cell. All characters that are no operations should be ignored, and considered to be comments.</p>

<table border='1'>
	<tr><td><code>&gt;</code></td><td>Move the pointer to the right</td></tr>
	<tr><td><code>&lt;</code></td><td>Move the pointer to the left</td></tr>
	<tr><td><code>+</code></td><td>Increment the memory cell at the pointer</td></tr>
	<tr><td><code>-</code></td><td>Decrement the memory cell at the pointer</td></tr>
	<tr><td><code>.</code></td><td>Output the character signified by the cell at the pointer</td></tr>
	<tr><td><code>,</code></td><td>Input a character and store it in the cell at the pointer</td></tr>
	<tr><td><code>[</code></td><td>Jump past the matching <code>]</code> if the cell at the pointer is 0</td></tr>
	<tr><td><code>]</code></td><td>Jump back to the matching <code>[</code> if the cell at the pointer is nonzero</td></tr>
</table>

<h3>Implementation</h3>

<p>Brainfuck was invented by Urban MÃ¼ller in 1993, in an attempt to make a language for which he could write the smallest possible compiler for the Amiga OS, version 2.0. He managed to write a 240-byte compiler.</p>

<p>Memory should normally consist of 8 bit cells, and wrap on overflow and underflow. Negative memory addresses should NOT be assumed to exist, however, an interpreter may provide some. Memory should consist of at least 30000 cells, some existing brainfuck programs do need more so this should be configurable or unbounded.</p>

<p>An interpreter can be implemented in about 180 bytes of <a href='uxntal.html'>Uxntal</a>.</p>
