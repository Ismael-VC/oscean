<h2>Sixel is a graphics format made of patterns six pixels high and one wide.</h2>

<p>An image is encoded by breaking up the bitmap into a series of 6-pixel high
strips that is then converted into a single <a href='ascii.html'>ASCII
character</a>, offset by 0x3f so that the first sixel is encoded as
<kbd>?</kbd>. This ensures that the sixels remain within the printable
character range of the ASCII character set. </p>

<h3>Characters</h3>

<p>The pixels can be read as a binary number, with the top pixel being the least
significant bit. Add the value of the pixels together, which gives a number
between 0 and 63 inclusive. This is converted to a character code by adding 63,
which is the code of the question mark character, <kbd>?</kbd>. The correspondence
between each possible combination of six pixels and its sixel character is
illustrated below.</p>

<img src='../media/refs/sixels.png'/>

<h3>Special characters</h3>

<p>Color is supported using the <kbd>#</kbd> character, followed by a number referring to one of a number of color registers, which varied from device to device.</p>

<ul>
	<li><kbd>-</kbd> Line Feed</li>
	<li><kbd>#1</kbd> Color1</li>
</ul>

<h3>Example</h3>

<pre>???owYn||~ywo??-?IRJaVNn^NVbJRI</pre>

<h3>Implementation</h3>

<pre>
@draw-sixels ( str* -- )
	[ LIT2 02 -Screen/auto ] DEO
	.Screen/x DEI2 ,&anchor STR2
	&w ( -- )
		LDAk [ LIT "- ] NEQ ?{
			[ LIT2 &anchor $2 ] .Screen/x DEO2
			.Screen/y DEI2k #0006 ADD2 ROT DEO2
			!& }
		LDAk [ LIT "? ] SUB ,&t STR
		#0600
	&l ( -- )
		[ LIT &t $1 ] OVR SFT #01 AND .Screen/pixel DEO
		INC GTHk ?&l
	POP2
	( | advance )
	.Screen/x DEI2k INC2 ROT DEO2
	.Screen/y DEI2k #0006 SUB2 ROT DEO2
	& INC2 LDAk ?&w
	POP2 JMP2r

@sample [ "???owYn||~ywo??-?IRJaVNn^NVbJRI $1 ]
</pre>

<ul>
	<li><a href='https://git.sr.ht/~rabbits/uxn-utils/tree/main/item/gui/sixels/sixels.tal' target='_blank'>Uxntal Implementation</a></li>
	<li><a href='https://www.vt100.net/dec/vt320/soft_characters' target='_blank'>VT320 Soft Character Sets</a></li>
</ul>

