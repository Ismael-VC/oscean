<h2>Uxn is a virtual machine with 32 instructions.</h2>

<img src='../media/generic/uxn.png' width='200' style='float:right'/>

<p>This <b>one-page computer</b> is capable of hosting small <a href='roms.html'>applications</a>, programmable in <a href='uxntal.html'>Uxntal</a>. It was designed with an <a href='uxn_devlog.html'>implementation-first</a> mindset and a focus on creating portable graphical tools and games.</p>

<p>This <a href='about.html'>wiki</a> and most of the audio-visual works documented on it were created with Uxn-powered tools.</p>

<h2>Memory</h2>

<p>Uxn has 64kb of addressable memory, no registers, and programs are self-modifiable. It can tunnel through 127 subroutines and find its way back. Up to 16 devices can interface with the CPU at once; devices are peripherals such as screens, controllers, or even other <i>uxns</i>. The stacks and devices memory live outside of the main memory.</p>

<table border='1'>
	<tr><th>Memory</th><td>RAM</td><td>Data</td><td>64kb</td></tr>
	<tr><th rowspan='6'>Stacks</th><td rowspan='3'>Working Stack</td><td>Data</td><td>254 bytes</td></tr>
	<tr><td>Error</td><td>1 byte</td></tr>
	<tr><td>Pointer</td><td>1 byte</td></tr>
	<tr><td rowspan='3'>Return Stack</td><td>Data</td><td>254 bytes</td></tr>
	<tr><td>Error</td><td>1 byte</td></tr>
	<tr><td>Pointer</td><td>1 byte</td></tr>
	<tr><th>IO</th><td>Devices</td><td>Data</td><td>256 bytes</td></tr>
</table>

<h2>Design</h2>

<p>Because Uxn was explicitly created to be hosted on <a href='permacomputing.html'>pre-existing hardware</a>, the design was advised primarily by relative software complexity; generating novel electronics is at odds with the project. Features were weighted against the relative difficulty they would add for programmers implementing their own emulators.</p>

<p>Stack-machines are ideal candidates for this scale of personal computing. Not only do they limit the complexity of the assembler, the resulting programs are quite succinct and do not require to be immediately abstracted to compiled languages.</p>

<figure>
	<img src='../media/generic/fizzbuzz.png' border='2'/>
	<figcaption>&mdash; fizzbuzz.rom, 99 bytes</figcaption>
</figure>

<p>With only 64kb of memory, it will never run Chrome, TensorFlow or a blockchain. It sucks at doing most modern computing activities. It's more about finding novel things could be made in such a small system.</p>

<p style='background: #eee; padding: 15px;'>While this project aspires to act as a target that may last, it is in its infancy, the design could still change and break compatibility.</p>

<p>The VM can be implemented in about <a href='https://git.sr.ht/~rabbits/uxn11/blob/main/src/uxn.c' target='_blank'>100 lines of C</a>, it lives at the core of the <a href='varvara.html'>Varvara computer</a>. Uxn is to Varvara, what the 6502 is to the Classic Nintendo.</p>

<p>Original illustrations created by <a href='https://kokorobot.ca/' target='_blank'>Rekka Bellum</a>.</p>

<img src='../media/identity/uxn64.png'/>

<ul>
	<li><a href='https://100r.co/site/uxn.html' target='_blank'>download emulator</a></li>
	<li><a href='https://llllllll.co/t/uxn-virtual-computer/46103' target='_blank'>visit forums</a></li>
	<li><a href='https://github.com/hundredrabbits/awesome-uxn' target='_blank'>community projects</a></li>
	<li><a href='https://lists.sr.ht/~rabbits/uxn' target='_blank'>mailing list</a></li>
</ul>

