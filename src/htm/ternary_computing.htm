<h2>-0+</h2>

<p>A computer with word-sizes that should be measured in trits, not bits. We will
use a 3-trit trybble, a 9-trit tryte, and a 27-trit word. Kleene logic augments
the conventional true and false of Boolean logic with a third value, unknown.</p>

<table border='1'>
	<tr>
		<th>Truth value</th><th>Unsigned</th><th>Balanced</th><th>BCT</th>
	</tr>
	<tr><td>false</td><td>0</td><td>-</td><td>00</td></tr>
	<tr><td>unknown</td><td>1</td><td>0</td><td>01</td></tr>
	<tr><td>truth</td><td>2</td><td>+</td><td>10</td></tr>
</table>

<p>Binary-coded ternary (BCT) is a representation allowing binary computers to
manipulate <a href='ternary.html'>ternary</a> data. In ternary, one trit
encodes 3 values. As such, if we use 2 bits per binary-encoded ternary
trit. </p>

<table border='1'>
	<tr><th colspan="2">Unsigned</th><th>BCT</th><th colspan="2">Balanced</th></tr>
	<tr><th>Dec.</th><th>Tern.</th><th></th><th>Tern.</th><th>Dec.</th></tr>
	<tr><td>0</td><td>00</td><td>0000</td><td>--</td><td>-4</td></tr>
	<tr><td>1</td><td>01</td><td>0001</td><td>-0</td><td>-3</td></tr>
	<tr><td>2</td><td>02</td><td>0010</td><td>-+</td><td>-2</td></tr>
	<tr><td>3</td><td>10</td><td>0100</td><td>0-</td><td>-1</td></tr>
	<tr><td>4</td><td>11</td><td>0101</td><td>00</td><td>0</td></tr>
	<tr><td>5</td><td>12</td><td>0110</td><td>0+</td><td>1</td></tr>
	<tr><td>6</td><td>20</td><td>1000</td><td>+-</td><td>2</td></tr>
	<tr><td>7</td><td>21</td><td>1001</td><td>+0</td><td>3</td></tr>
	<tr><td>8</td><td>22</td><td>1010</td><td>++</td><td>4</td></tr>
</table>

<h3>CPU</h3>

<p>We can store a 16 trits in a 32-bit binary integer.</p>



<img src='../media/refs/trefoil.png' width='120'/>

<ul>
	<li><a href='http://homepage.cs.uiowa.edu/~dwjones/ternary/logic.shtml' target='_blank'>Ternary Logic</a></li>
</ul>

